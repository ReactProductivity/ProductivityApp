{"ast":null,"code":"var _jsxFileName = \"/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Stopwatch.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nclass Stopwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n  }\n\n  render() {\n    const timerTime = this.state.timerTime;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds, this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Start\"), this.state.timerOn === true && /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Stop\"), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Resume\"), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.resetTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Stopwatch.js"],"names":["React","Component","Button","Stopwatch","state","timerOn","timerStart","timerTime","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","render","centiseconds","Math","floor","slice","seconds","minutes","hours"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nclass Stopwatch extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n  };\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime,\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart,\n      });\n    }, 10);\n  };\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n  resetTimer = () => {\n    this.setState({\n      timerStart: 0,\n      timerTime: 0,\n    });\n  };\n\n  render () {\n    const timerTime = this.state.timerTime;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return (\n      <div className=\"Stopwatch\">\n        {hours} : {minutes} : {seconds} : {centiseconds}\n        {this.state.timerOn === false && this.state.timerTime === 0 && (\n          <Button variant=\"dark\" onClick={this.startTimer}>\n            Start\n          </Button>\n        )}\n        {this.state.timerOn === true && (\n          <Button variant=\"dark\" onClick={this.stopTimer}>\n            Stop\n          </Button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <Button variant=\"dark\" onClick={this.startTimer}>\n            Resume\n          </Button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <Button variant=\"dark\" onClick={this.resetTimer}>\n            Reset\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}