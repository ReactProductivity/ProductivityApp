{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  componentDidMount() {\n    /* fetch state here */\n    if (this.props.online) {\n      this.setState({\n        status: \"online\"\n      });\n    } else {\n      this.setState({\n        status: \"offline\"\n      });\n    }\n  }\n\n  getStatusColor() {\n    switch (this.state.status) {\n      case \"offline\":\n        return \"red\";\n\n      case \"online\":\n        return \"green\";\n    }\n  }\n\n  render() {\n    let color = 'green';\n\n    if (this.props.status === 'offline') {\n      color = 'red';\n    } else if (this.props.status === 'away') {\n      color = 'yellow';\n    }\n\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      action: true,\n      variant: \"success\",\n      id: \"personLi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      id: \"avatar\",\n      src: Avatar,\n      roundedCircle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      id: \"profileName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, this.props.uid), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"dot\",\n      style: {\n        backgroundColor: this.getStatusColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst addPersonToProps = state => {\n  return {\n    initialFriends: state.firebase.profile.friends,\n    auth: state.firebase.auth,\n    online: state.auth.online\n  };\n};\n\nexport default connect(addPersonToProps)(Person);","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js"],"names":["React","Component","ListGroup","Image","Avatar","Row","Col","connect","Person","constructor","props","state","status","componentDidMount","online","setState","getStatusColor","render","color","uid","backgroundColor","addPersonToProps","initialFriends","firebase","profile","friends","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAO,yBAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAO,MAAMC,MAAN,SAAqBP,SAArB,CAA8B;AACjCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACA,QAAG,KAAKH,KAAL,CAAWI,MAAd,EAAqB;AACjB,WAAKC,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH,KAFD,MAGI;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH;AAEJ;;AAEDI,EAAAA,cAAc,GAAG;AACb,YAAO,KAAKL,KAAL,CAAWC,MAAlB;AACI,WAAK,SAAL;AAAgB,eAAO,KAAP;;AAChB,WAAK,QAAL;AAAe,eAAO,OAAP;AAFnB;AAIH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,QAAIC,KAAK,GAAG,OAAZ;;AACA,QAAG,KAAKR,KAAL,CAAWE,MAAX,KAAsB,SAAzB,EAAmC;AACjCM,MAAAA,KAAK,GAAG,KAAR;AACD,KAFD,MAEO,IAAI,KAAKR,KAAL,CAAWE,MAAX,KAAsB,MAA1B,EAAkC;AACvCM,MAAAA,KAAK,GAAG,QAAR;AACD;;AAED,wBACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,OAAO,EAAC,SAA/B;AAAyC,MAAA,EAAE,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,GAAG,EAAEd,MAAxB;AAAgC,MAAA,aAAa,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKM,KAAL,CAAWS,GADhB,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,EAAE,EAAC,KAAT;AAAe,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,KAAKJ;AAAvB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,CADJ;AAeH;;AA/CgC;;AAkDrC,MAAMK,gBAAgB,GAAIV,KAAD,IAAW;AAChC,SAAO;AACLW,IAAAA,cAAc,EAAEX,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,OADlC;AAELC,IAAAA,IAAI,EAAEf,KAAK,CAACY,QAAN,CAAeG,IAFhB;AAGLZ,IAAAA,MAAM,EAAEH,KAAK,CAACe,IAAN,CAAWZ;AAHd,GAAP;AAKH,CAND;;AAQA,eAAeP,OAAO,CAACc,gBAAD,CAAP,CAA0Bb,MAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n\n\nexport class Person extends Component{\n    constructor(props){\n        super(props);\n        this.state = {status:\"\"};\n    }\n\n    componentDidMount(){\n        /* fetch state here */ \n        if(this.props.online){\n            this.setState({status:\"online\"});\n        }\n        else{\n            this.setState({status:\"offline\"});\n        }\n      \n    }\n\n    getStatusColor() {\n        switch(this.state.status) {\n            case \"offline\": return \"red\";\n            case \"online\": return \"green\";\n        }\n    }\n\n    render(){\n        let color = 'green';\n        if(this.props.status === 'offline'){\n          color = 'red';\n        } else if (this.props.status === 'away') {\n          color = 'yellow';\n        }\n\n        return(\n            <ListGroup.Item action variant=\"success\" id=\"personLi\" >\n                <Row>\n                    <Col>\n                        <Image id=\"avatar\" src={Avatar} roundedCircle />\n                    </Col>\n                    <Col id=\"profileName\">\n                        {this.props.uid}\n                    </Col>\n                    <Col>\n                        <span id=\"dot\" style={{backgroundColor: this.getStatusColor}}></span>\n                    </Col>\n                </Row>\n            </ListGroup.Item>\n        )\n    }\n}\n\nconst addPersonToProps = (state) => {\n    return {\n      initialFriends: state.firebase.profile.friends,\n      auth: state.firebase.auth,\n      online: state.auth.online\n    };\n};\n\nexport default connect(addPersonToProps)(Person)"]},"metadata":{},"sourceType":"module"}