{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/FriendsBar.js\";\nimport React, { Component } from \"react\";\nimport \"../../styles/friendsBar.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Person } from \"./Person\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport addFriend from \"../../store/actions/friendActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nclass FriendsBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n      filtered: [],\n      currentSearch: \"\",\n      currentFunction: \"Find friend...\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    /* initial friends from database when you login */\n    //console.log(this.props.initialFriends);\n    // console.log(friends);\n    let copyList = this.props.initialFriends.slice();\n    let copyList2 = this.props.initialFriends.slice();\n    setState({\n      friends: copyList,\n      filtered: copyList2\n    });\n  } // addFriend(name){\n  //     const newList = this.state.friends.slice();\n  //     const newList2 = this.state.friends.slice();\n  //     newList.push({name: name});\n  //     newList2.push(name);\n  //     this.props.addFriend(name);\n  //     this.setState({friends:newList, filtered:newList2});\n  // }\n\n  /* filtered ->  what is displayed on friendsbar\n       friends -> what keeps track of list of friends */\n\n\n  addFriend(name) {\n    if (name === \"\") {\n      name = this.state.currentFunction;\n    }\n\n    const friendsList = this.state.friends.slice();\n    const filteredList = this.state.filtered.slice();\n\n    if (name === \"Find friend...\") {\n      /* when switching to add friend mode, clear out friends bar*/\n      this.setState({\n        filtered: [],\n        currentFunction: \"Add friend...\"\n      });\n    } else if (name === \"Add friend...\") {\n      /* a switch to find friends mode brings back friends list*/\n      this.setState({\n        filtered: friendsList,\n        currentFunction: \"Find friend...\"\n      });\n    } else {\n      if (this.state.currentFunction === \"Add friend...\") {\n        name = document.getElementById(\"searchFriend\").value;\n        friendsList.push({\n          name: name\n        });\n        filteredList.push({\n          name: name\n        });\n        this.setState({\n          friends: friendsList,\n          filtered: filteredList\n        });\n      }\n    }\n  }\n\n  toggleFriendsBar() {\n    document.getElementById(\"sidebar\").classList.toggle(\"active\");\n  } // handleChange(input){\n  //     let copyList = this.state.friends.slice();\n  //     let filteredList = [];\n  //     if (input.target.value === \"\"){\n  //        filteredList = this.state.filtered;\n  //     }\n  //     else{\n  //         filteredList = copyList.filter(item => {\n  //             const lc = item.toLowerCase();\n  //             const filter = input.target.value.toLowerCase();\n  //             return lc.includes(filter);\n  //         });\n  //     }\n  //     this.setState({friends:filteredList});\n  // }\n\n\n  handleChange(input) {\n    let currSearch = input.target.value;\n    let currFriendsList = [...this.state.friends];\n    let filteredList = [...this.state.filtered];\n\n    if (input.target.value === \"\") {\n      if (this.state.currentFunction === \"Add friend...\") currSearch = \"Add friend...\";else {\n        currSearch = \"Find friend...\";\n        filteredList = currFriendsList;\n      }\n      console.log(\"HERE 1\");\n      this.setState({\n        filtered: filteredList,\n        currentFunction: currSearch\n      });\n      return;\n    }\n\n    if (this.state.currentFunction === \"Find friend...\") {\n      filteredList = currFriendsList.filter(item => {\n        const lc = item.toLowerCase();\n        const filter = input.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    }\n\n    console.log(\"HERE 2\");\n    console.log(filteredList); // this.setState({ friends: currFriendsList, filtered: filteredList});\n\n    this.setState(this.setState(state => {\n      const friends = [...currFriendsList];\n      const filtered = [...filteredList];\n      return {\n        friends,\n        filtered\n      };\n    }));\n    console.log(\"HERE 3\");\n    console.log(this.state.filtered);\n  }\n\n  render() {\n    // redirect to login page if not logged in\n    if (!this.props.auth.uid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 14\n        }\n      });\n    }\n\n    console.log(\"HERE 4\");\n    console.log(this.state.filtered);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      id: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle\",\n      onClick: this.toggleFriendsBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"friendsText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"FRIENDS\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"addFriend\",\n      variant: \"dark\",\n      onClick: () => this.addFriend(document.getElementById(\"searchFriend\").value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"+\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      id: \"separate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"searchFriend\",\n      placeholder: this.state.currentFunction,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"friendList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, this.state.filtered && this.state.filtered.map(friend => {\n      return /*#__PURE__*/React.createElement(Person, {\n        key: friend,\n        name: friend,\n        status: \"online\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      });\n    })))));\n  }\n\n}\n\nconst addFriendsListToProps = state => {\n  return {\n    initialFriends: state.firebase.profile.friends,\n    auth: state.firebase.auth\n  };\n};\n\nconst addDispatchtoProps = dispatch => {\n  return {\n    addFriend: friend => dispatch(addFriend(friend))\n  };\n}; // export default compose(\n//   firestoreConnect(() => [\"friends\"]),\n//   connect(addFriendsListToProps, addDispatchtoProps)\n// )(FriendsBar);\n\n\nexport default connect(addFriendsListToProps, addDispatchtoProps)(FriendsBar);","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/FriendsBar.js"],"names":["React","Component","Container","Row","Col","Button","Form","Person","ListGroup","addFriend","connect","compose","firestoreConnect","Redirect","FriendsBar","constructor","props","state","friends","filtered","currentSearch","currentFunction","handleChange","bind","componentDidMount","copyList","initialFriends","slice","copyList2","setState","name","friendsList","filteredList","document","getElementById","value","push","toggleFriendsBar","classList","toggle","input","currSearch","target","currFriendsList","console","log","filter","item","lc","toLowerCase","includes","render","auth","uid","map","friend","addFriendsListToProps","firebase","profile","addDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../styles/friendsBar.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Person } from \"./Person\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport addFriend from \"../../store/actions/friendActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nclass FriendsBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n      filtered: [],\n      currentSearch: \"\",\n      currentFunction: \"Find friend...\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n      /* initial friends from database when you login */\n      //console.log(this.props.initialFriends);\n      // console.log(friends);\n      let copyList = this.props.initialFriends.slice();\n      let copyList2 = this.props.initialFriends.slice();\n      setState({friends: copyList, filtered: copyList2});\n  }\n\n  // addFriend(name){\n  //     const newList = this.state.friends.slice();\n  //     const newList2 = this.state.friends.slice();\n  //     newList.push({name: name});\n  //     newList2.push(name);\n  //     this.props.addFriend(name);\n  //     this.setState({friends:newList, filtered:newList2});\n  // }\n\n  /* filtered ->  what is displayed on friendsbar\n       friends -> what keeps track of list of friends */\n  addFriend(name) {\n    if (name === \"\") {\n      name = this.state.currentFunction;\n    }\n    const friendsList = this.state.friends.slice();\n    const filteredList = this.state.filtered.slice();\n    if (name === \"Find friend...\") {\n      /* when switching to add friend mode, clear out friends bar*/\n      this.setState({ filtered: [], currentFunction: \"Add friend...\" });\n    } else if (name === \"Add friend...\") {\n      /* a switch to find friends mode brings back friends list*/\n      this.setState({\n        filtered: friendsList,\n        currentFunction: \"Find friend...\",\n      });\n    } else {\n      if (this.state.currentFunction === \"Add friend...\") {\n        name = document.getElementById(\"searchFriend\").value;\n        friendsList.push({ name: name });\n        filteredList.push({ name: name });\n        this.setState({ friends: friendsList, filtered: filteredList });\n      }\n    }\n  }\n\n  toggleFriendsBar() {\n    document.getElementById(\"sidebar\").classList.toggle(\"active\");\n  }\n\n  // handleChange(input){\n  //     let copyList = this.state.friends.slice();\n  //     let filteredList = [];\n\n  //     if (input.target.value === \"\"){\n  //        filteredList = this.state.filtered;\n  //     }\n  //     else{\n  //         filteredList = copyList.filter(item => {\n  //             const lc = item.toLowerCase();\n  //             const filter = input.target.value.toLowerCase();\n  //             return lc.includes(filter);\n  //         });\n\n  //     }\n  //     this.setState({friends:filteredList});\n  // }\n\n  handleChange(input) {\n    let currSearch = input.target.value;\n    let currFriendsList = [...this.state.friends];\n    let filteredList = [...this.state.filtered];\n    if (input.target.value === \"\") {\n      if (this.state.currentFunction === \"Add friend...\")\n        currSearch = \"Add friend...\";\n      else {\n        currSearch = \"Find friend...\";\n        filteredList = currFriendsList;\n      }\n      console.log(\"HERE 1\")\n      this.setState({ filtered: filteredList, currentFunction: currSearch });\n      return;\n    }\n    if (this.state.currentFunction === \"Find friend...\") {\n      filteredList = currFriendsList.filter((item) => {\n        const lc = item.toLowerCase();\n        const filter = input.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    }\n    console.log(\"HERE 2\")\n    console.log(filteredList)\n    // this.setState({ friends: currFriendsList, filtered: filteredList});\n    this.setState(this.setState(state => {\n        const friends = [...currFriendsList];\n        const filtered = [...filteredList]\n        return {\n          friends,\n          filtered,\n        };\n      }));\n    console.log(\"HERE 3\")\n    console.log(this.state.filtered)\n\n  }\n\n  render() {\n    // redirect to login page if not logged in\n    if (!this.props.auth.uid) {\n      return <Redirect to=\"/login\" />;\n    }\n    console.log(\"HERE 4\")\n    console.log(this.state.filtered)\n    return (\n      <>\n        <Container id=\"sidebar\">\n          <div className=\"toggle\" onClick={this.toggleFriendsBar}>\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n\n          <Row>\n            <Col>\n              <p id=\"friendsText\">FRIENDS</p>\n            </Col>\n            <Col>\n              <Button\n                id=\"addFriend\"\n                variant=\"dark\"\n                onClick={() =>\n                  this.addFriend(document.getElementById(\"searchFriend\").value)\n                }\n              >\n                +\n              </Button>\n            </Col>\n          </Row>\n          <hr id=\"separate\"></hr>\n          <Row>\n            <Col>\n              <Form>\n                <Form.Control\n                  id=\"searchFriend\"\n                  placeholder={this.state.currentFunction}\n                  onChange={this.handleChange}\n                />\n              </Form>\n            </Col>\n          </Row>\n\n          <ListGroup>\n            <div id=\"friendList\">\n              {this.state.filtered &&\n                this.state.filtered.map((friend) => {\n                  return (\n                    <Person\n                      key={friend}\n                      name={friend}\n                      status={\"online\"}\n                    ></Person>\n                  );\n                })}\n            </div>\n          </ListGroup>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst addFriendsListToProps = (state) => {\n  return {\n    initialFriends: state.firebase.profile.friends,\n    auth: state.firebase.auth,\n  };\n};\n\nconst addDispatchtoProps = (dispatch) => {\n  return {\n    addFriend: (friend) => dispatch(addFriend(friend)),\n  };\n};\n\n// export default compose(\n//   firestoreConnect(() => [\"friends\"]),\n//   connect(addFriendsListToProps, addDispatchtoProps)\n// )(FriendsBar);\n\nexport default connect(addFriendsListToProps,addDispatchtoProps)(FriendsBar)"]},"metadata":{},"sourceType":"module"}