{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { auth } from 'firebase';\nimport fire from '../config/firebaseConfig';\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n      name: \"\"\n    };\n    this.getStatusColor = this.getStatusColor.bind(this);\n  }\n\n  componentDidMount() {\n    /* fetch online status here */\n    var userRef = fire.database().ref(`/status/${this.props.uid}`);\n    userRef.on('value', snapshot => {\n      //console.log(snapshot.val())\n      if (snapshot.val().state === 'online') {\n        this.setState({\n          status: \"online\"\n        });\n      } else {\n        this.setState({\n          status: \"offline\"\n        });\n      }\n    }); // get name of current friend\n\n    var nameDb = fire.firestore().collection('users').doc(this.props.uid);\n    nameDb.get().then(resp => {\n      this.setState({\n        name: resp.data().firstname\n      });\n    });\n  }\n\n  getStatusColor() {\n    switch (this.state.status) {\n      case \"offline\":\n        return \"red\";\n\n      case \"online\":\n        return \"green\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      action: true,\n      variant: \"success\",\n      id: \"personLi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      id: \"avatar\",\n      src: Avatar,\n      roundedCircle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      id: \"profileName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, this.state.name, \"Hi\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"dot\",\n      style: {\n        backgroundColor: this.getStatusColor()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n} // const addDispatchtoProps = (dispatch) => {\n//     return {\n//         isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n//     }\n// }\n\nexport default Person;","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js"],"names":["React","Component","ListGroup","Image","Avatar","Row","Col","connect","auth","fire","Person","constructor","props","state","status","name","getStatusColor","bind","componentDidMount","userRef","database","ref","uid","on","snapshot","val","setState","nameDb","firestore","collection","doc","get","then","resp","data","firstname","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAO,yBAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAGA,OAAO,MAAMC,MAAN,SAAqBT,SAArB,CAA8B;AACjCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,IAAI,EAAC;AAAjB,KAAb;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACA,QAAIC,OAAO,GAAGV,IAAI,CAACW,QAAL,GAAgBC,GAAhB,CAAqB,WAAU,KAAKT,KAAL,CAAWU,GAAI,EAA9C,CAAd;AACAH,IAAAA,OAAO,CAACI,EAAR,CAAW,OAAX,EAAoBC,QAAQ,IAAI;AAC5B;AACA,UAAIA,QAAQ,CAACC,GAAT,GAAeZ,KAAf,KAAyB,QAA7B,EAAuC;AACnC,aAAKa,QAAL,CAAc;AAACZ,UAAAA,MAAM,EAAC;AAAR,SAAd;AACH,OAFD,MAEO;AACH,aAAKY,QAAL,CAAc;AAACZ,UAAAA,MAAM,EAAC;AAAR,SAAd;AACH;AACJ,KAPD,EAHe,CAYf;;AACA,QAAIa,MAAM,GAAGlB,IAAI,CAACmB,SAAL,GAAiBC,UAAjB,CAA4B,OAA5B,EAAqCC,GAArC,CAAyC,KAAKlB,KAAL,CAAWU,GAApD,CAAb;AACAK,IAAAA,MAAM,CAACI,GAAP,GAAaC,IAAb,CAAmBC,IAAD,IAAU;AACxB,WAAKP,QAAL,CAAc;AAACX,QAAAA,IAAI,EAAEkB,IAAI,CAACC,IAAL,GAAYC;AAAnB,OAAd;AACH,KAFD;AAGH;;AAEDnB,EAAAA,cAAc,GAAG;AACb,YAAO,KAAKH,KAAL,CAAWC,MAAlB;AACI,WAAK,SAAL;AAAgB,eAAO,KAAP;;AAChB,WAAK,QAAL;AAAe,eAAO,OAAP;AAFnB;AAIH;;AAEDsB,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,OAAO,EAAC,SAA/B;AAAyC,MAAA,EAAE,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,GAAG,EAAEhC,MAAxB;AAAgC,MAAA,aAAa,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKS,KAAL,CAAWE,IADhB,OAJJ,eAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,EAAE,EAAC,KAAT;AAAe,MAAA,KAAK,EAAE;AAACsB,QAAAA,eAAe,EAAE,KAAKrB,cAAL;AAAlB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ,CADJ;AAgBH;;AAlDgC,C,CAqDrC;AACA;AACA;AACA;AACA;;AAEA,eAAgBN,MAAhB","sourcesContent":["import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { auth } from 'firebase';\nimport fire from '../config/firebaseConfig'\n\n\nexport class Person extends Component{\n    constructor(props){\n        super(props);\n        this.state = {status:\"\", name:\"\"};\n        this.getStatusColor = this.getStatusColor.bind(this);\n    }\n\n    componentDidMount(){\n        /* fetch online status here */ \n        var userRef = fire.database().ref(`/status/${this.props.uid}`)\n        userRef.on('value', snapshot => {\n            //console.log(snapshot.val())\n            if (snapshot.val().state === 'online') {\n                this.setState({status:\"online\"})\n            } else {\n                this.setState({status:\"offline\"})\n            }\n        });\n\n        // get name of current friend\n        var nameDb = fire.firestore().collection('users').doc(this.props.uid)\n        nameDb.get().then((resp) => {\n            this.setState({name: resp.data().firstname})\n        })\n    }\n\n    getStatusColor() {\n        switch(this.state.status) {\n            case \"offline\": return \"red\";\n            case \"online\": return \"green\";\n        }\n    }\n\n    render(){\n        return(\n            <ListGroup.Item action variant=\"success\" id=\"personLi\" >\n                <Row>\n                    <Col>\n                        <Image id=\"avatar\" src={Avatar} roundedCircle />\n                    </Col>\n                    <Col id=\"profileName\">\n                        {this.state.name}\n                        Hi\n                    </Col>\n                    <Col>\n                        <span id=\"dot\" style={{backgroundColor: this.getStatusColor()}}></span>\n                    </Col>\n                </Row>\n            </ListGroup.Item>\n        )\n    }\n}\n\n// const addDispatchtoProps = (dispatch) => {\n//     return {\n//         isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n//     }\n// }\n\nexport default (Person)"]},"metadata":{},"sourceType":"module"}