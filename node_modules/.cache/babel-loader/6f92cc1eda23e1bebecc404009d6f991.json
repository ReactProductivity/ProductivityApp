{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport \"../../styles/content.css\";\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      charData: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"HERe\");\n    this.setState({});\n    const charDataOptions = {\n      responsive: true,\n      title: {\n        text: \"Hours spent during the last week\",\n        display: true\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true\n          },\n          gridLines: {\n            display: false\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true\n          },\n          gridLines: {\n            display: false\n          }\n        }]\n      }\n    };\n  }\n\n} // const Dankmemes = () => {\n//   const [chartData, setChartData] = useState({});\n//   const chart = () => {\n//     setChartData({\n//       labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n//       datasets: [\n//         {\n//           label: \"Hours Spent\",\n//           lineTension: 1,\n//           data: [3, 2, 1, 0, 8],\n//           backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n//           borderWidth: 4,\n//         },\n//       ],\n//     });\n//   };\n//   useEffect(() => {\n//     chart();\n//   }, []);\n//   return (\n//     <div>\n//       <h1>Activity Graph</h1>\n//       <div\n//         className=\"LineGraph\"\n//         style={{ height: \"000px\", width: \"1000px\", margin: \"400px\" }}\n//       >\n//         <Line data={chartData} options={charDataOptions} />\n//         <Doughnut data={chartData} options={charDataOptions} />\n//       </div>\n//     </div>\n//   );\n// };\n// export default Dankmemes;\n// // style={{ height: \"500px\", width: \"500px\" }}","map":{"version":3,"sources":["/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Content.js"],"names":["React","useState","useEffect","Line","Bar","Doughnut","Content","Component","constructor","props","state","charData","componentWillReceiveProps","nextProps","console","log","setState","charDataOptions","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,QAApB,QAAoC,iBAApC;AACA,OAAO,0BAAP;;AAEA,MAAMC,OAAN,SAAsBC,SAAtB,CAAgC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAKC,QAAL,CAAc,EAAd;AAEA,UAAMC,eAAe,GAAG;AACtBC,MAAAA,UAAU,EAAE,IADU;AAEtBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,kCAAR;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAFe;AAGtBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,IADL;AAELC,YAAAA,aAAa,EAAE,EAFV;AAGLC,YAAAA,WAAW,EAAE;AAHR,WADT;AAMEC,UAAAA,SAAS,EAAE;AACTP,YAAAA,OAAO,EAAE;AADA;AANb,SADK,CADD;AAaNQ,QAAAA,KAAK,EAAE,CACL;AACEL,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,IADL;AAELC,YAAAA,aAAa,EAAE,EAFV;AAGLC,YAAAA,WAAW,EAAE;AAHR,WADT;AAMEC,UAAAA,SAAS,EAAE;AACTP,YAAAA,OAAO,EAAE;AADA;AANb,SADK;AAbD;AAHc,KAAxB;AA8BD;;AA1C6B,C,CA6ChC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport \"../../styles/content.css\";\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      charData: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"HERe\");\n    this.setState({});\n\n    const charDataOptions = {\n      responsive: true,\n      title: { text: \"Hours spent during the last week\", display: true },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10,\n              beginAtZero: true,\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10,\n              beginAtZero: true,\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    };\n  }\n}\n\n// const Dankmemes = () => {\n//   const [chartData, setChartData] = useState({});\n\n//   const chart = () => {\n//     setChartData({\n//       labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n//       datasets: [\n//         {\n//           label: \"Hours Spent\",\n//           lineTension: 1,\n//           data: [3, 2, 1, 0, 8],\n//           backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n//           borderWidth: 4,\n//         },\n//       ],\n//     });\n//   };\n\n//   useEffect(() => {\n//     chart();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Activity Graph</h1>\n//       <div\n//         className=\"LineGraph\"\n//         style={{ height: \"000px\", width: \"1000px\", margin: \"400px\" }}\n//       >\n//         <Line data={chartData} options={charDataOptions} />\n//         <Doughnut data={chartData} options={charDataOptions} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dankmemes;\n// // style={{ height: \"500px\", width: \"500px\" }}\n"]},"metadata":{},"sourceType":"module"}