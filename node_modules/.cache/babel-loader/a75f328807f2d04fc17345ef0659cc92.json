{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { auth } from 'firebase';\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\"\n    };\n    this.getStatusColor = this.getStatusColor.bind(this);\n  }\n\n  componentDidMount() {\n    /* fetch state here */\n    this.props.isLoggedIn(this.props.uid);\n\n    if (this.props.online) {\n      this.setState({\n        status: \"online\"\n      });\n    } else {\n      this.setState({\n        status: \"offline\"\n      });\n    }\n\n    console.log(this.props.online);\n  }\n\n  getStatusColor() {\n    switch (this.state.status) {\n      case \"offline\":\n        return \"red\";\n\n      case \"online\":\n        return \"green\";\n    }\n  }\n\n  render() {\n    // this.props.isLoggedIn(this.props.uid);\n    // if(this.props.online){\n    //     this.setState({status:\"online\"});\n    // }\n    // else{\n    //     this.setState({status:\"offline\"});\n    // }\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      action: true,\n      variant: \"success\",\n      id: \"personLi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      id: \"avatar\",\n      src: Avatar,\n      roundedCircle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      id: \"profileName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, this.props.uid), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"dot\",\n      style: {\n        backgroundColor: this.getStatusColor()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    online: state.auth.online\n  };\n}; // const addDispatchtoProps = (dispatch) => {\n//     return {\n//         isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n//     }\n// }\n\n\nexport default connect(mapStatetoProps)(Person);","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js"],"names":["React","Component","ListGroup","Image","Avatar","Row","Col","connect","auth","Person","constructor","props","state","status","getStatusColor","bind","componentDidMount","isLoggedIn","uid","online","setState","console","log","render","backgroundColor","mapStatetoProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAO,yBAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,UAArB;AAGA,OAAO,MAAMC,MAAN,SAAqBR,SAArB,CAA8B;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAb;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AAEA,SAAKL,KAAL,CAAWM,UAAX,CAAsB,KAAKN,KAAL,CAAWO,GAAjC;;AAEA,QAAG,KAAKP,KAAL,CAAWQ,MAAd,EAAqB;AACjB,WAAKC,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH,KAFD,MAGI;AACA,WAAKO,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWQ,MAAvB;AACH;;AAEDL,EAAAA,cAAc,GAAG;AACb,YAAO,KAAKF,KAAL,CAAWC,MAAlB;AACI,WAAK,SAAL;AAAgB,eAAO,KAAP;;AAChB,WAAK,QAAL;AAAe,eAAO,OAAP;AAFnB;AAIH;;AAEDU,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,wBACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,OAAO,EAAC,SAA/B;AAAyC,MAAA,EAAE,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,GAAG,EAAER,MAAxB;AAAgC,MAAA,aAAa,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKO,KAAL,CAAWO,GADhB,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,EAAE,EAAC,KAAT;AAAe,MAAA,KAAK,EAAE;AAACM,QAAAA,eAAe,EAAE,KAAKV,cAAL;AAAlB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,CADJ;AAeH;;AApDgC;;AAuDrC,MAAMW,eAAe,GAAIb,KAAD,IAAW;AAC/B,SAAO;AACHO,IAAAA,MAAM,EAAEP,KAAK,CAACJ,IAAN,CAAWW;AADhB,GAAP;AAGD,CAJH,C,CAKA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { auth } from 'firebase';\n\n\nexport class Person extends Component{\n    constructor(props){\n        super(props);\n        this.state = {status:\"\"};\n        this.getStatusColor = this.getStatusColor.bind(this);\n    }\n\n    componentDidMount(){\n        /* fetch state here */ \n        \n        this.props.isLoggedIn(this.props.uid);\n        \n        if(this.props.online){\n            this.setState({status:\"online\"});\n        }\n        else{\n            this.setState({status:\"offline\"});\n        }\n        console.log(this.props.online)\n    }\n\n    getStatusColor() {\n        switch(this.state.status) {\n            case \"offline\": return \"red\";\n            case \"online\": return \"green\";\n        }\n    }\n\n    render(){\n        // this.props.isLoggedIn(this.props.uid);\n        // if(this.props.online){\n        //     this.setState({status:\"online\"});\n        // }\n        // else{\n        //     this.setState({status:\"offline\"});\n        // }\n        console.log(this.state)\n        return(\n            <ListGroup.Item action variant=\"success\" id=\"personLi\" >\n                <Row>\n                    <Col>\n                        <Image id=\"avatar\" src={Avatar} roundedCircle />\n                    </Col>\n                    <Col id=\"profileName\">\n                        {this.props.uid}\n                    </Col>\n                    <Col>\n                        <span id=\"dot\" style={{backgroundColor: this.getStatusColor()}}></span>\n                    </Col>\n                </Row>\n            </ListGroup.Item>\n        )\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        online: state.auth.online\n    };\n  };\n// const addDispatchtoProps = (dispatch) => {\n//     return {\n//         isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n//     }\n// }\n\nexport default connect(mapStatetoProps)(Person)"]},"metadata":{},"sourceType":"module"}