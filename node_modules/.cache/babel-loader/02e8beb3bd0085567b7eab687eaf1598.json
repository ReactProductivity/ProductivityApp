{"ast":null,"code":"var _jsxFileName = \"/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Content.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport \"../../styles/content.css\";\nimport { Component } from \"react\";\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      charData: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"HERe\");\n    this.setState({\n      charData: nextProps\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LineGraph\",\n      style: {\n        height: \"1000px\",\n        width: \"1000px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Doughnut, {\n      data: this.state.charData,\n      options: charDataOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst charDataOptions = {\n  responsive: true,\n  title: {\n    text: \"Hours spent during the last week\",\n    display: true\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        autoSkip: true,\n        maxTicksLimit: 10,\n        beginAtZero: true\n      },\n      gridLines: {\n        display: false\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        autoSkip: true,\n        maxTicksLimit: 10,\n        beginAtZero: true\n      },\n      gridLines: {\n        display: false\n      }\n    }]\n  }\n};\nconst setChartData = {\n  labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n  datasets: [{\n    label: \"Hours Spent\",\n    lineTension: 1,\n    data: [3, 2, 1, 0, 8],\n    backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n    borderWidth: 4\n  }]\n};\nexport default Content; // const Dankmemes = () => {\n//   const [chartData, setChartData] = useState({});\n// const chart = () => {\n//   setChartData({\n//     labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n//     datasets: [\n//       {\n//         label: \"Hours Spent\",\n//         lineTension: 1,\n//         data: [3, 2, 1, 0, 8],\n//         backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n//         borderWidth: 4,\n//       },\n//     ],\n//   });\n// };\n//   useEffect(() => {\n//     chart();\n//   }, []);\n//   return (\n//     <div>\n//       <h1>Activity Graph</h1>\n// <div\n//   className=\"LineGraph\"\n//   style={{ height: \"000px\", width: \"1000px\", margin: \"400px\" }}\n// >\n//         <Line data={chartData} options={charDataOptions} />\n//         <Doughnut data={chartData} options={charDataOptions} />\n//       </div>\n//     </div>\n//   );\n// };\n// export default Dankmemes;\n// // style={{ height: \"500px\", width: \"500px\" }}","map":{"version":3,"sources":["/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Content.js"],"names":["React","useState","useEffect","Line","Bar","Doughnut","Component","Content","constructor","props","state","charData","componentWillReceiveProps","nextProps","console","log","setState","render","height","width","charDataOptions","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","setChartData","labels","datasets","label","lineTension","data","backgroundColor","borderWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,QAApB,QAAoC,iBAApC;AACA,OAAO,0BAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEE;AAAZ,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,QAA3B;AAAqC,MAAA,OAAO,EAAES,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnB6B;;AAsBhC,MAAMA,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAE,IADU;AAEtBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAE,kCAAR;AAA4CC,IAAAA,OAAO,EAAE;AAArD,GAFe;AAGtBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,aAAa,EAAE,EAFV;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADT;AAMEC,MAAAA,SAAS,EAAE;AACTP,QAAAA,OAAO,EAAE;AADA;AANb,KADK,CADD;AAaNQ,IAAAA,KAAK,EAAE,CACL;AACEL,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,aAAa,EAAE,EAFV;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADT;AAMEC,MAAAA,SAAS,EAAE;AACTP,QAAAA,OAAO,EAAE;AADA;AANb,KADK;AAbD;AAHc,CAAxB;AA+BA,MAAMS,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,CADW;AAEnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,WAAW,EAAE,CAFf;AAGEC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAHR;AAIEC,IAAAA,eAAe,EAAE,yBAJnB;AAKEC,IAAAA,WAAW,EAAE;AALf,GADQ;AAFS,CAArB;AAaA,eAAejC,OAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport \"../../styles/content.css\";\nimport { Component } from \"react\";\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      charData: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"HERe\");\n    this.setState({ charData: nextProps });\n  }\n\n  render() {\n    return (\n      <div className=\"LineGraph\" style={{ height: \"1000px\", width: \"1000px\" }}>\n        <Doughnut data={this.state.charData} options={charDataOptions} />\n      </div>\n    );\n  }\n}\n\nconst charDataOptions = {\n  responsive: true,\n  title: { text: \"Hours spent during the last week\", display: true },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10,\n          beginAtZero: true,\n        },\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10,\n          beginAtZero: true,\n        },\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nconst setChartData = {\n  labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n  datasets: [\n    {\n      label: \"Hours Spent\",\n      lineTension: 1,\n      data: [3, 2, 1, 0, 8],\n      backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n      borderWidth: 4,\n    },\n  ],\n};\n\nexport default Content;\n\n// const Dankmemes = () => {\n//   const [chartData, setChartData] = useState({});\n\n// const chart = () => {\n//   setChartData({\n//     labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n//     datasets: [\n//       {\n//         label: \"Hours Spent\",\n//         lineTension: 1,\n//         data: [3, 2, 1, 0, 8],\n//         backgroundColor: \"rgba(75, 192, 192, 0.6)\",\n//         borderWidth: 4,\n//       },\n//     ],\n//   });\n// };\n\n//   useEffect(() => {\n//     chart();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Activity Graph</h1>\n// <div\n//   className=\"LineGraph\"\n//   style={{ height: \"000px\", width: \"1000px\", margin: \"400px\" }}\n// >\n//         <Line data={chartData} options={charDataOptions} />\n//         <Doughnut data={chartData} options={charDataOptions} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dankmemes;\n// // style={{ height: \"500px\", width: \"500px\" }}\n"]},"metadata":{},"sourceType":"module"}