{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./components/config/firebaseConfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirestore,\n  getFirebase\n})), reduxFirestore(firebaseConfig)));\nconst profileSpecificProps = {\n  userProfile: 'users',\n  presence: 'presence',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  config: profileSpecificProps,\n  config: firebaseConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  });\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\"));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","firebaseConfig","firebase","useSelector","isLoaded","store","withExtraArgument","profileSpecificProps","userProfile","presence","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,uBAAtC,QAAoE,iBAApE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,WAAT,QAA6B,aAA7B;AACA,SAASC,QAAT,QAA0B,sBAA1B;AAEA,MAAMC,KAAK,GAAGf,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACLD,eAAe,CAACI,KAAK,CAACW,iBAAN,CAAwB;AAAET,EAAAA,YAAF;AAAgBG,EAAAA;AAAhB,CAAxB,CAAD,CADV,EAELJ,cAAc,CAACK,cAAD,CAFT,CAFgB,CAAzB;AAQA,MAAMM,oBAAoB,GAAG;AAC3BC,EAAAA,WAAW,EAAE,OADc;AAE3BC,EAAAA,QAAQ,EAAE,UAFiB;AAG3BC,EAAAA,sBAAsB,EAAE,IAHG;AAI3BC,EAAAA,sBAAsB,EAAE,KAJG;AAK3BC,EAAAA,gBAAgB,EAAE;AALS,CAA7B;AASA,MAAMC,QAAQ,GAAG;AACfX,EAAAA,QADe;AAEfY,EAAAA,MAAM,EAAEP,oBAFO;AAGfO,EAAAA,MAAM,EAAEb,cAHO;AAIfc,EAAAA,QAAQ,EAAEV,KAAK,CAACU,QAJD;AAKfjB,EAAAA;AALe,CAAjB;;AAQA,SAASkB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAClC,QAAMC,IAAI,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACjB,QAAN,CAAegB,IAAzB,CAAxB;AACA,MAAI,CAACd,QAAQ,CAACc,IAAD,CAAb,EAAqB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACjB,SAAOD,QAAP;AACL;;AAGD9B,QAAQ,CAACiC,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEf,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF;AAYAjC,aAAa,CAACkC,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./components/config/firebaseConfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  presence: 'presence',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\n\nconst rrfProps = {\n  firebase,\n  config: profileSpecificProps,\n  config: firebaseConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div></div>;\n      return children\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}