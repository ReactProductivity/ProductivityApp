{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { auth } from 'firebase';\nimport fire from '../config/firebaseConfig';\nexport class Person extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n      name: \"\"\n    };\n    this.getStatusColor = this.getStatusColor.bind(this);\n    this.getName = this.getName.bind(this);\n  }\n\n  componentDidMount() {\n    /* fetch online status here */\n    var userRef = fire.database().ref(`/status/${this.props.uid}`);\n    userRef.on('value', snapshot => {\n      console.log(snapshot.val());\n\n      if (snapshot.val().state === 'online') {\n        this.setState({\n          status: \"online\"\n        });\n      } else {\n        this.setState({\n          status: \"offline\"\n        });\n      }\n    }); // get name of current friend\n\n    var nameDb = fire.firestore().collection('users').doc(this.props.uid);\n    nameDb.get().then(resp => {\n      this.setState({\n        name: resp.data().firstname\n      });\n    });\n  }\n\n  getStatusColor() {\n    switch (this.state.status) {\n      case \"offline\":\n        return \"red\";\n\n      case \"online\":\n        return \"green\";\n    }\n  }\n\n  getName() {}\n\n  render() {\n    // this.props.isLoggedIn(this.props.uid);\n    // if(this.props.online){\n    //     this.setState({status:\"online\"});\n    // }\n    // else{\n    //     this.setState({status:\"offline\"});\n    // }\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      action: true,\n      variant: \"success\",\n      id: \"personLi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      id: \"avatar\",\n      src: Avatar,\n      roundedCircle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      id: \"profileName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"dot\",\n      style: {\n        backgroundColor: this.getStatusColor()\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    online: state.auth.online\n  };\n}; // const addDispatchtoProps = (dispatch) => {\n//     return {\n//         isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n//     }\n// }\n\n\nexport default connect(mapStatetoProps)(Person);","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/Person.js"],"names":["React","Component","ListGroup","Image","Avatar","Row","Col","connect","auth","fire","Person","constructor","props","state","status","name","getStatusColor","bind","getName","componentDidMount","userRef","database","ref","uid","on","snapshot","console","log","val","setState","nameDb","firestore","collection","doc","get","then","resp","data","firstname","render","backgroundColor","mapStatetoProps","online"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Avatar from '../../images/profile_avatar2.jpg';\nimport \"../../styles/person.css\";\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { auth } from 'firebase';\nimport fire from '../config/firebaseConfig'\n\n\nexport class Person extends Component{\n    constructor(props){\n        super(props);\n        this.state = {status:\"\", name:\"\"};\n        this.getStatusColor = this.getStatusColor.bind(this);\n        this.getName = this.getName.bind(this);\n        \n    }\n\n    componentDidMount(){\n        /* fetch online status here */ \n        var userRef = fire.database().ref(`/status/${this.props.uid}`)\n        userRef.on('value', snapshot => {\n            console.log(snapshot.val())\n            if (snapshot.val().state === 'online') {\n                this.setState({status:\"online\"})\n            } else {\n                this.setState({status:\"offline\"})\n            }\n        });\n\n        // get name of current friend\n        var nameDb = fire.firestore().collection('users').doc(this.props.uid)\n        nameDb.get().then((resp) => {\n            this.setState({name: resp.data().firstname})\n        })\n    }\n\n    getStatusColor() {\n        switch(this.state.status) {\n            case \"offline\": return \"red\";\n            case \"online\": return \"green\";\n        }\n    }\n\n    getName(){\n\n    }\n\n    render(){\n        // this.props.isLoggedIn(this.props.uid);\n        // if(this.props.online){\n        //     this.setState({status:\"online\"});\n        // }\n        // else{\n        //     this.setState({status:\"offline\"});\n        // }\n        console.log(this.props)\n        return(\n            <ListGroup.Item action variant=\"success\" id=\"personLi\" >\n                <Row>\n                    <Col>\n                        <Image id=\"avatar\" src={Avatar} roundedCircle />\n                    </Col>\n                    <Col id=\"profileName\">\n                        {this.state.name}\n                    </Col>\n                    <Col>\n                        <span id=\"dot\" style={{backgroundColor: this.getStatusColor()}}></span>\n                    </Col>\n                </Row>\n            </ListGroup.Item>\n        )\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        online: state.auth.online\n    };\n};\n// const addDispatchtoProps = (dispatch) => {\n//     return {\n//         isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n//     }\n// }\n\nexport default connect(mapStatetoProps)(Person)"]},"metadata":{},"sourceType":"module"}