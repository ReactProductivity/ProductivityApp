{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\"; //import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navigation from \"./components/layout/Navigation\";\nimport FriendsBar from \"./components/layout/FriendsBar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { getFirebase, getFirestore } from \"react-redux-firebase\";\n\nfunction App() {\n  /* this is where we initial friends for user based from database for the logged in user*/\n  console.log(\"HEREadsfasfadsfadsfadsfasd\");\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const uid = firebase.auth().currentUser.uid;\n  var userStatusDatabaseRef = firebase.database().ref('status/' + uid);\n  var isOfflineForDatabase = {\n    state: 'offline',\n    last_changed: firebase.database.ServerValue.TIMESTAMP\n  };\n  var isOnlineForDatabase = {\n    state: 'online',\n    last_changed: firebase.database.ServerValue.TIMESTAMP\n  };\n  firebase.database().ref('.info/connected').on('value', function (snapshot) {\n    // If we're not currently connected, don't do anything.\n    if (snapshot.val() == false) {\n      return;\n    }\n\n    ;\n    userStatusDatabaseRef.onDisconnect().set(isOfflineForDatabase).then(function () {\n      userStatusDatabaseRef.set(isOnlineForDatabase);\n    });\n  });\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: FriendsBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n} // import { import } from '@babel/types';\n\n\nexport default App;","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/App.js"],"names":["React","Navigation","FriendsBar","BrowserRouter","Switch","Route","Login","Register","getFirebase","getFirestore","App","console","log","firebase","firestore","uid","auth","currentUser","userStatusDatabaseRef","database","ref","isOfflineForDatabase","state","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","on","snapshot","val","onDisconnect","set","then"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,sBAA1C;;AAEA,SAASC,GAAT,GAAe;AACb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGL,YAAY,EAA9B;AACA,QAAMM,GAAG,GAAGF,QAAQ,CAACG,IAAT,GAAgBC,WAAhB,CAA4BF,GAAxC;AACA,MAAIG,qBAAqB,GAAGL,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,YAAYL,GAApC,CAA5B;AAEA,MAAIM,oBAAoB,GAAG;AACvBC,IAAAA,KAAK,EAAE,SADgB;AAEvBC,IAAAA,YAAY,EAAEV,QAAQ,CAACM,QAAT,CAAkBK,WAAlB,CAA8BC;AAFrB,GAA3B;AAKA,MAAIC,mBAAmB,GAAG;AACtBJ,IAAAA,KAAK,EAAE,QADe;AAEtBC,IAAAA,YAAY,EAAEV,QAAQ,CAACM,QAAT,CAAkBK,WAAlB,CAA8BC;AAFtB,GAA1B;AAKAZ,EAAAA,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,iBAAxB,EAA2CO,EAA3C,CAA8C,OAA9C,EAAuD,UAASC,QAAT,EAAmB;AACtE;AACA,QAAIA,QAAQ,CAACC,GAAT,MAAkB,KAAtB,EAA6B;AACzB;AACH;;AAAA;AAEDX,IAAAA,qBAAqB,CAACY,YAAtB,GAAqCC,GAArC,CAAyCV,oBAAzC,EAA+DW,IAA/D,CAAoE,YAAW;AAC3Ed,MAAAA,qBAAqB,CAACa,GAAtB,CAA0BL,mBAA1B;AACH,KAFD;AAGH,GATD;AAUA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAExB,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF,CADF;AAYD,C,CACD;;;AAEA,eAAeG,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from \"./components/layout/Navigation\";\nimport FriendsBar from \"./components/layout/FriendsBar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { getFirebase, getFirestore } from \"react-redux-firebase\";\n\nfunction App() {\n  /* this is where we initial friends for user based from database for the logged in user*/\n  console.log(\"HEREadsfasfadsfadsfadsfasd\")\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const uid = firebase.auth().currentUser.uid;\n  var userStatusDatabaseRef = firebase.database().ref('status/' + uid);\n  \n  var isOfflineForDatabase = {\n      state: 'offline',\n      last_changed: firebase.database.ServerValue.TIMESTAMP,\n  };\n\n  var isOnlineForDatabase = {\n      state: 'online',\n      last_changed: firebase.database.ServerValue.TIMESTAMP,\n  };\n\n  firebase.database().ref('.info/connected').on('value', function(snapshot) {\n      // If we're not currently connected, don't do anything.\n      if (snapshot.val() == false) {\n          return;\n      };\n\n      userStatusDatabaseRef.onDisconnect().set(isOfflineForDatabase).then(function() {\n          userStatusDatabaseRef.set(isOnlineForDatabase);\n      });\n  });\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={FriendsBar} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n// import { import } from '@babel/types';\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}