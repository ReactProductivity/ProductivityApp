{"ast":null,"code":"export const login = creds => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(creds.email, creds.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'LOGIN_FAILED',\n        error\n      });\n    });\n  };\n};\nexport const logout = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: \"LOGOUT_SUCCESS\"\n      });\n    });\n  };\n};\nexport const register = fields => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(fields.email, fields.password).then(resp => {\n      firestore.collection('users').doc(resp.user.uid).set({\n        firstname: fields.firstname,\n        lastname: fields.lastname,\n        username: fields.username,\n        uid: resp.user.uid\n      });\n      firebase.database().ref('status/' + resp.user.uid).set({\n        firstname: fields.firstname,\n        lastname: fields.lastname,\n        username: fields.username,\n        uid: resp.user.uid\n      });\n    }).then(() => {\n      dispatch({\n        type: 'USER_CREATED'\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'USER_CREATION_FAILED',\n        error\n      });\n    });\n  };\n};\nexport const isLoggedIn = uid => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // here is the async call to firebase\n    const firestore = getFirestore();\n    const usersRef = firestore.collection('users').doc(uid);\n    const doc = usersRef.get();\n    console.log(doc);\n  };\n};","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/store/actions/authActions.js"],"names":["login","creds","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","logout","signOut","register","fields","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstname","lastname","username","database","ref","isLoggedIn","usersRef","get","console","log"],"mappings":"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","sourcesContent":["export const login = (creds) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            creds.email,\n            creds.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((error) => {\n            dispatch({type: 'LOGIN_FAILED', error})\n        })\n    }\n}\n\nexport const logout = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: \"LOGOUT_SUCCESS\"})\n        })\n    }\n}\n\nexport const register = (fields) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            fields.email,\n            fields.password\n        ).then((resp) => {\n            firestore.collection('users').doc(resp.user.uid).set({\n                firstname: fields.firstname,\n                lastname: fields.lastname,\n                username: fields.username,\n                uid: resp.user.uid\n            })\n            firebase.database().ref('status/' + resp.user.uid).set({\n                firstname: fields.firstname,\n                lastname: fields.lastname,\n                username: fields.username,\n                uid: resp.user.uid\n            });\n        }).then(() => {\n            dispatch({type: 'USER_CREATED'})\n        }).catch(error => {\n            dispatch({type: 'USER_CREATION_FAILED', error})\n        })\n    }\n}\n\nexport const isLoggedIn = (uid) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // here is the async call to firebase\n        const firestore = getFirestore();\n        const usersRef = firestore.collection('users').doc(uid);\n        const doc = usersRef.get();\n        console.log(doc)\n        \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}