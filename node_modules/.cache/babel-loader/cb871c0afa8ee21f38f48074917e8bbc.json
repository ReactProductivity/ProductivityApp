{"ast":null,"code":"var _jsxFileName = \"/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Countdown.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Countdown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Countdown ended\");\n        }\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const {\n        timerTime,\n        timerOn\n      } = this.state;\n      const max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < max) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, \"Hours : Minutes : Seconds\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incHours\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"\\u21E7\"), \";\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incMinutes\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"\\u21E7\"), \";\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incSeconds\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"\\u21E7\"), \";\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decHours\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }, \"\\u21E9\"), \";\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decMinutes\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"\\u21E9\"), \";\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decSeconds\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"\\u21E9\"), \";\"));\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/home/ishaan/Programming/Keeshaan/ProductivityApp/src/components/layout/Countdown.js"],"names":["React","Component","Countdown","state","timerOn","timerStart","timerTime","startTimer","setState","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nclass Countdown extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n  };\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime,\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime,\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown ended\");\n      }\n    }, 10);\n  };\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n  resetTimer = () => {\n    if (this.state.timerOn === false) {\n      this.setState({\n        timerTime: this.state.timerStart,\n      });\n    }\n  };\n  adjustTimer = (input) => {\n    const { timerTime, timerOn } = this.state;\n    const max = 216000000;\n    if (!timerOn) {\n      if (input === \"incHours\" && timerTime + 3600000 < max) {\n        this.setState({ timerTime: timerTime + 3600000 });\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n        this.setState({ timerTime: timerTime - 3600000 });\n      } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n        this.setState({ timerTime: timerTime + 60000 });\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n        this.setState({ timerTime: timerTime - 60000 });\n      } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n        this.setState({ timerTime: timerTime + 1000 });\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n        this.setState({ timerTime: timerTime - 1000 });\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"Countdown-label\">\n        Hours : Minutes : Seconds\n        <div className=\"Countdown-display\">\n          <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>;\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>\n            &#8679;\n          </button>\n          ;\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>\n            &#8679;\n          </button>\n          ;<button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\n          ;\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>\n            &#8681;\n          </button>\n          ;\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>\n            &#8681;\n          </button>\n          ;\n        </div>\n      </div>\n    );\n  }\n}\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}