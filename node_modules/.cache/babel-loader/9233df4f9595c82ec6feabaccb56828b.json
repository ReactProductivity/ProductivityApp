{"ast":null,"code":"var _jsxFileName = \"/Users/harmeensingh/Desktop/CurrentApp/ProductivityApp/src/components/layout/FriendsBar.js\";\nimport React, { Component } from \"react\";\nimport \"../../styles/friendsBar.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Person } from \"./Person\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport addFriend from \"../../store/actions/friendActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nclass FriendsBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n      filtered: [],\n      currentSearch: \"\",\n      currentFunction: \"Find friend...\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } // componentDidMount() {\n  //     /* initial friends from database when you login */\n  //     //console.log(this.props.initialFriends);\n  //     // console.log(friends);\n  //     // this.setState({friends});\n  // }\n  //   static getDerivedStateFromProps(props, state) {\n  //     if (props.initialFriends !== state.friends) {\n  //       return {\n  //         friends: props.initialFriends,\n  //       };\n  //     }\n  //     return null;\n  //   }\n  // addFriend(name){\n  //     const newList = this.state.friends.slice();\n  //     const newList2 = this.state.friends.slice();\n  //     newList.push({name: name});\n  //     newList2.push(name);\n  //     this.props.addFriend(name);\n  //     this.setState({friends:newList, filtered:newList2});\n  // }\n\n  /* filtered ->  what is displayed on friendsbar\n       friends -> what keeps track of list of friends */\n\n\n  addFriend(name, currentSearch) {\n    const friendsList = this.state.friends.slice();\n    const filteredList = this.state.filtered.slice();\n    console.log(currentSearch);\n\n    if (currentSearch == \"Find friend...\") {\n      /* when switching to add friend mode, clear out friends bar*/\n      this.switchMode(\"Add friend...\", []);\n    } else if (currentSearch == \"Add friend...\") {\n      /* a switch to find friends mode brings back friends list*/\n      this.switchMode(\"Find friend\", friendsList);\n    } else {\n      if (this.state.currentFunction == \"Add friend...\") {\n        name = document.getElementById(\"searchFriend\").value;\n        friendsList.push(name);\n        filteredList.push(name);\n        this.setState({\n          friends: friendsList,\n          filtered: filteredList\n        });\n      }\n    }\n  }\n\n  switchMode(currentFunction, filteredList) {\n    this.setState({\n      filtered: filteredList,\n      currentFunction: currentFunction\n    });\n  }\n\n  toggleFriendsBar() {\n    document.getElementById(\"sidebar\").classList.toggle(\"active\");\n  } // handleChange(input){\n  //     let copyList = this.state.friends.slice();\n  //     let filteredList = [];\n  //     if (input.target.value === \"\"){\n  //        filteredList = this.state.filtered;\n  //     }\n  //     else{\n  //         filteredList = copyList.filter(item => {\n  //             const lc = item.toLowerCase();\n  //             const filter = input.target.value.toLowerCase();\n  //             return lc.includes(filter);\n  //         });\n  //     }\n  //     this.setState({friends:filteredList});\n  // }\n\n\n  handleChange(input) {\n    let currSearch = input.target.value;\n    let currFriendsList = this.state.friends.slice();\n    let filteredList = [];\n\n    if (input.target.value == \"\") {\n      if (this.state.currentFunction == \"Add friend...\") currSearch = \"Find friend...\";else {\n        currSearch = \"Add friend...\";\n        filteredList = currFriendsList;\n      }\n      this.setState({\n        filtered: filteredList,\n        currentFunction: currSearch\n      });\n      return;\n    }\n\n    if (this.state.currentFunction == \"Find friend...\") {\n      filteredList = currFriendsList.filter(item => {\n        const lc = item.toLowerCase();\n        const filter = input.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    }\n\n    this.setState({\n      friends: currFriendsList,\n      filtered: filteredList\n    });\n  }\n\n  render() {\n    // redirect to login page if not logged in\n    if (!this.props.auth.uid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      id: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle\",\n      onClick: this.toggleFriendsBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"friendsText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"FRIENDS\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"addFriend\",\n      variant: \"dark\",\n      onClick: () => this.addFriend(document.getElementById(\"searchFriend\").value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"+\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      id: \"separate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"searchFriend\",\n      placeholder: \"Find friend...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"friendList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, this.state.friends && this.state.friends.map(friend => {\n      return /*#__PURE__*/React.createElement(Person, {\n        key: friend.id,\n        name: friend.name,\n        status: \"online\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      });\n    })))));\n  }\n\n}\n\nconst addFriendsListToProps = state => {\n  return {\n    initialFriends: state.firestore.ordered.friends,\n    auth: state.firebase.auth\n  };\n};\n\nconst addDispatchtoProps = dispatch => {\n  return {\n    addFriend: friend => dispatch(addFriend(friend))\n  };\n};\n\nexport default compose(firestoreConnect(() => [\"friends\"]), connect(addFriendsListToProps, addDispatchtoProps))(FriendsBar);","map":{"version":3,"sources":["/Users/harmeensingh/Desktop/CurrentApp/ProductivityApp/src/components/layout/FriendsBar.js"],"names":["React","Component","Container","Row","Col","Button","Form","Person","ListGroup","addFriend","connect","compose","firestoreConnect","Redirect","FriendsBar","constructor","props","state","friends","filtered","currentSearch","currentFunction","handleChange","bind","name","friendsList","slice","filteredList","console","log","switchMode","document","getElementById","value","push","setState","toggleFriendsBar","classList","toggle","input","currSearch","target","currFriendsList","filter","item","lc","toLowerCase","includes","render","auth","uid","map","friend","id","addFriendsListToProps","initialFriends","firestore","ordered","firebase","addDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../styles/friendsBar.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Person } from \"./Person\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport addFriend from \"../../store/actions/friendActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nclass FriendsBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n      filtered: [],\n      currentSearch: \"\",\n      currentFunction: \"Find friend...\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // componentDidMount() {\n  //     /* initial friends from database when you login */\n  //     //console.log(this.props.initialFriends);\n  //     // console.log(friends);\n  //     // this.setState({friends});\n  // }\n\n  //   static getDerivedStateFromProps(props, state) {\n  //     if (props.initialFriends !== state.friends) {\n  //       return {\n  //         friends: props.initialFriends,\n  //       };\n  //     }\n  //     return null;\n  //   }\n\n  // addFriend(name){\n  //     const newList = this.state.friends.slice();\n  //     const newList2 = this.state.friends.slice();\n  //     newList.push({name: name});\n  //     newList2.push(name);\n  //     this.props.addFriend(name);\n  //     this.setState({friends:newList, filtered:newList2});\n  // }\n\n  /* filtered ->  what is displayed on friendsbar\n       friends -> what keeps track of list of friends */\n  addFriend(name, currentSearch) {\n    const friendsList = this.state.friends.slice();\n    const filteredList = this.state.filtered.slice();\n    console.log(currentSearch);\n    if (currentSearch == \"Find friend...\") {\n      /* when switching to add friend mode, clear out friends bar*/\n      this.switchMode(\"Add friend...\", []);\n    } else if (currentSearch == \"Add friend...\") {\n      /* a switch to find friends mode brings back friends list*/\n      this.switchMode(\"Find friend\", friendsList);\n    } else {\n      if (this.state.currentFunction == \"Add friend...\") {\n        name = document.getElementById(\"searchFriend\").value;\n        friendsList.push(name);\n        filteredList.push(name);\n        this.setState({ friends: friendsList, filtered: filteredList });\n      }\n    }\n  }\n\n  switchMode(currentFunction, filteredList) {\n    this.setState({ filtered: filteredList, currentFunction: currentFunction });\n  }\n\n  toggleFriendsBar() {\n    document.getElementById(\"sidebar\").classList.toggle(\"active\");\n  }\n\n  // handleChange(input){\n  //     let copyList = this.state.friends.slice();\n  //     let filteredList = [];\n\n  //     if (input.target.value === \"\"){\n  //        filteredList = this.state.filtered;\n  //     }\n  //     else{\n  //         filteredList = copyList.filter(item => {\n  //             const lc = item.toLowerCase();\n  //             const filter = input.target.value.toLowerCase();\n  //             return lc.includes(filter);\n  //         });\n\n  //     }\n  //     this.setState({friends:filteredList});\n  // }\n\n  handleChange(input) {\n    let currSearch = input.target.value;\n    let currFriendsList = this.state.friends.slice();\n    let filteredList = [];\n    if (input.target.value == \"\") {\n      if (this.state.currentFunction == \"Add friend...\")\n        currSearch = \"Find friend...\";\n      else {\n        currSearch = \"Add friend...\";\n        filteredList = currFriendsList;\n      }\n      this.setState({ filtered: filteredList, currentFunction: currSearch });\n      return;\n    }\n    if (this.state.currentFunction == \"Find friend...\") {\n      filteredList = currFriendsList.filter((item) => {\n        const lc = item.toLowerCase();\n        const filter = input.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    }\n    this.setState({ friends: currFriendsList, filtered: filteredList });\n  }\n\n  render() {\n    // redirect to login page if not logged in\n    if (!this.props.auth.uid) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <>\n        <Container id=\"sidebar\">\n          <div className=\"toggle\" onClick={this.toggleFriendsBar}>\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n\n          <Row>\n            <Col>\n              <p id=\"friendsText\">FRIENDS</p>\n            </Col>\n            <Col>\n              <Button\n                id=\"addFriend\"\n                variant=\"dark\"\n                onClick={() =>\n                  this.addFriend(document.getElementById(\"searchFriend\").value)\n                }\n              >\n                +\n              </Button>\n            </Col>\n          </Row>\n          <hr id=\"separate\"></hr>\n          <Row>\n            <Col>\n              <Form>\n                <Form.Control\n                  id=\"searchFriend\"\n                  placeholder=\"Find friend...\"\n                  onChange={this.handleChange}\n                />\n              </Form>\n            </Col>\n          </Row>\n\n          <ListGroup>\n            <div id=\"friendList\">\n              {this.state.friends &&\n                this.state.friends.map((friend) => {\n                  return (\n                    <Person\n                      key={friend.id}\n                      name={friend.name}\n                      status={\"online\"}\n                    ></Person>\n                  );\n                })}\n            </div>\n          </ListGroup>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst addFriendsListToProps = (state) => {\n  return {\n    initialFriends: state.firestore.ordered.friends,\n    auth: state.firebase.auth,\n  };\n};\n\nconst addDispatchtoProps = (dispatch) => {\n  return {\n    addFriend: (friend) => dispatch(addFriend(friend)),\n  };\n};\n\nexport default compose(\n  firestoreConnect(() => [\"friends\"]),\n  connect(addFriendsListToProps, addDispatchtoProps)\n)(FriendsBar);\n"]},"metadata":{},"sourceType":"module"}