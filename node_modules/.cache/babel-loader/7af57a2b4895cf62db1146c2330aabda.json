{"ast":null,"code":"var _jsxFileName = \"/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/FriendsBar.js\";\nimport React, { Component } from \"react\";\nimport \"../../styles/friendsBar.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Person } from \"./Person\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport addFriend from \"../../store/actions/friendActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from '../../store/actions/authActions';\n\nclass FriendsBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n      filtered: [],\n      currentSearch: \"\",\n      currentFunction: \"Find friend...\"\n    }; //console.log(this.props)\n\n    this.handleChange = this.handleChange.bind(this);\n  } // componentWillReceiveProps(nextProps){\n  //     this.setState({ friends: nextProps.initialFriends, filtered: nextProps.initialFriends})\n  // }   \n\n\n  componentDidMount() {\n    // console.log(this.props.initialFriends)\n    this.setState({\n      friends: this.props.initialFriends\n    });\n  }\n  /* filtered ->  what is displayed on friendsbar\n       friends -> what keeps track of list of friends */\n\n\n  addFriend(name) {\n    if (name === \"\") {\n      name = this.state.currentFunction;\n    }\n\n    const friendsList = this.state.friends.slice();\n    const filteredList = this.state.filtered.slice();\n\n    if (name === \"Find friend...\") {\n      /* when switching to add friend mode, clear out friends bar*/\n      this.setState({\n        filtered: [],\n        currentFunction: \"Add friend...\"\n      });\n    } else if (name === \"Add friend...\") {\n      /* a switch to find friends mode brings back friends list*/\n      this.setState({\n        filtered: friendsList,\n        currentFunction: \"Find friend...\"\n      });\n    } else {\n      if (this.state.currentFunction === \"Add friend...\") {\n        name = document.getElementById(\"searchFriend\").value;\n        friendsList.push({\n          name: name\n        });\n        filteredList.push({\n          name: name\n        });\n        this.setState({\n          friends: friendsList,\n          filtered: filteredList\n        });\n      }\n    }\n  }\n\n  toggleFriendsBar() {\n    document.getElementById(\"sidebar\").classList.toggle(\"active\");\n  }\n\n  handleChange(input) {\n    let currSearch = input.target.value;\n    let currFriendsList = [...this.state.friends];\n    let filteredList = [...this.state.filtered];\n\n    if (input.target.value === \"\") {\n      if (this.state.currentFunction === \"Add friend...\") currSearch = \"Add friend...\";else {\n        currSearch = \"Find friend...\";\n        filteredList = currFriendsList;\n      }\n      this.setState({\n        filtered: filteredList,\n        currentFunction: currSearch\n      });\n      return;\n    }\n\n    if (this.state.currentFunction === \"Find friend...\") {\n      filteredList = currFriendsList.filter(item => {\n        const lc = item.toLowerCase();\n        const filter = input.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    }\n\n    this.setState({\n      friends: currFriendsList,\n      filtered: filteredList\n    });\n  }\n\n  render() {\n    // redirect to login page if not logged in\n    if (!this.props.auth.uid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }\n      });\n    }\n\n    console.log(this.props); // let getNames = []\n    // var i = 0;\n    // if(this.state.friends !== undefined){\n    //     for (i = 0; i < this.state.friends.length; i++) {\n    //         let item = this.state.friends[i];\n    //         getNames.push(this.props.users.this.state.friends[i].firstname);\n    //     }\n    // }\n    // console.log(getNames)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      id: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle\",\n      onClick: this.toggleFriendsBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"friendsText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"FRIENDS\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"addFriend\",\n      variant: \"dark\",\n      onClick: () => this.addFriend(document.getElementById(\"searchFriend\").value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"+\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      id: \"separate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"searchFriend\",\n      placeholder: this.state.currentFunction,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"friendList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, this.props.initialFriends && this.props.initialFriends.map((friend, index) => {\n      // get the name of the friend based off of the users\n      console.log(this.props.users);\n      var i = 0;\n      let name = null;\n\n      for (i = 0; i < this.props.users.length; i++) {\n        if (this.props.users[i].uid === friend) {\n          name = this.props.users[i].firstname;\n          break;\n        }\n      }\n\n      console.log(name);\n      return /*#__PURE__*/React.createElement(Person, {\n        key: friend,\n        name: name,\n        uid: friend,\n        isLoggedIn: this.props.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 41\n        }\n      });\n    })))));\n  }\n\n}\n\nconst addFriendsListToProps = state => {\n  console.log(state);\n  return {\n    initialFriends: state.firebase.profile.friends,\n    auth: state.firebase.auth,\n    users: state.firestore.ordered.users\n  };\n};\n\nconst addDispatchtoProps = dispatch => {\n  return {\n    addFriend: friend => dispatch(addFriend(friend)),\n    isLoggedIn: uid => dispatch(isLoggedIn(uid))\n  };\n};\n\nexport default compose(firestoreConnect(() => [\"users\"]), connect(addFriendsListToProps, addDispatchtoProps))(FriendsBar); // export default connect(addFriendsListToProps,addDispatchtoProps)(FriendsBar)","map":{"version":3,"sources":["/Users/keeratgrewal/Desktop/ProductivityApp/src/components/layout/FriendsBar.js"],"names":["React","Component","Container","Row","Col","Button","Form","Person","ListGroup","addFriend","connect","compose","firestoreConnect","Redirect","isLoggedIn","FriendsBar","constructor","props","state","friends","filtered","currentSearch","currentFunction","handleChange","bind","componentDidMount","setState","initialFriends","name","friendsList","slice","filteredList","document","getElementById","value","push","toggleFriendsBar","classList","toggle","input","currSearch","target","currFriendsList","filter","item","lc","toLowerCase","includes","render","auth","uid","console","log","map","friend","index","users","i","length","firstname","addFriendsListToProps","firebase","profile","firestore","ordered","addDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../styles/friendsBar.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Person } from \"./Person\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport addFriend from \"../../store/actions/friendActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport {isLoggedIn} from '../../store/actions/authActions';\n\nclass FriendsBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            friends: [],\n            filtered: [],\n            currentSearch: \"\",\n            currentFunction: \"Find friend...\"\n        };\n        //console.log(this.props)\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // componentWillReceiveProps(nextProps){\n    //     this.setState({ friends: nextProps.initialFriends, filtered: nextProps.initialFriends})\n    // }   \n\n    componentDidMount(){\n        // console.log(this.props.initialFriends)\n        this.setState({friends: this.props.initialFriends})\n    }\n\n  /* filtered ->  what is displayed on friendsbar\n       friends -> what keeps track of list of friends */\n    addFriend(name) {\n        if (name === \"\") {\n            name = this.state.currentFunction;\n        }\n        const friendsList = this.state.friends.slice();\n        const filteredList = this.state.filtered.slice();\n        if (name === \"Find friend...\") {\n        /* when switching to add friend mode, clear out friends bar*/\n            this.setState({ filtered: [], currentFunction: \"Add friend...\" });\n        } \n        else if (name === \"Add friend...\") {\n        /* a switch to find friends mode brings back friends list*/\n            this.setState({\n                filtered: friendsList,\n                currentFunction: \"Find friend...\",\n            });\n        } \n        else {\n            if (this.state.currentFunction === \"Add friend...\") {\n                name = document.getElementById(\"searchFriend\").value;\n                friendsList.push({ name: name });\n                filteredList.push({ name: name });\n                this.setState({ friends: friendsList, filtered: filteredList });\n            }\n        }\n    }\n\n    toggleFriendsBar() {\n        document.getElementById(\"sidebar\").classList.toggle(\"active\");\n    }\n\n    handleChange(input) {\n        let currSearch = input.target.value;\n        let currFriendsList = [...this.state.friends];\n        let filteredList = [...this.state.filtered];\n        if (input.target.value === \"\") {\n            if (this.state.currentFunction === \"Add friend...\")\n                currSearch = \"Add friend...\";\n            else {\n                currSearch = \"Find friend...\";\n                filteredList = currFriendsList;\n            }\n            this.setState({ filtered: filteredList, currentFunction: currSearch });\n            return;\n        }\n        if (this.state.currentFunction === \"Find friend...\") {\n            filteredList = currFriendsList.filter((item) => {\n                const lc = item.toLowerCase();\n                const filter = input.target.value.toLowerCase();\n                return lc.includes(filter);\n            });\n        }\n        this.setState({ friends: currFriendsList, filtered: filteredList});\n\n    }\n\n    render() {\n        // redirect to login page if not logged in\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n        \n        console.log(this.props)\n        // let getNames = []\n        // var i = 0;\n        // if(this.state.friends !== undefined){\n        //     for (i = 0; i < this.state.friends.length; i++) {\n        //         let item = this.state.friends[i];\n        //         getNames.push(this.props.users.this.state.friends[i].firstname);\n        //     }\n        // }\n        // console.log(getNames)\n            \n        return (\n            <>\n            <Container id=\"sidebar\">\n                <div className=\"toggle\" onClick={this.toggleFriendsBar}>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n\n                <Row>\n                    <Col>\n                        <p id=\"friendsText\">FRIENDS</p>\n                    </Col>\n                    <Col>\n                        <Button\n                            id=\"addFriend\"\n                            variant=\"dark\"\n                            onClick={() =>\n                            this.addFriend(document.getElementById(\"searchFriend\").value)\n                            }\n                        >\n                            +\n                        </Button>\n                    </Col>\n                </Row>\n                <hr id=\"separate\"></hr>\n                <Row>\n                    <Col>\n                        <Form>\n                            <Form.Control\n                            id=\"searchFriend\"\n                            placeholder={this.state.currentFunction}\n                            onChange={this.handleChange}\n                            />\n                        </Form>\n                    </Col>\n                </Row>\n                <ListGroup>\n                    <div id=\"friendList\">\n                        {/* {this.state.filtered &&\n                            this.state.filtered.map((friend) => {\n                            return (\n                                <Person\n                                    key={friend}\n                                    name={friend}\n                                    uid={friend}\n                                    isLoggedIn = {this.props.isLoggedIn}\n                                >\n                                </Person>\n                            );\n                            })} */}\n                            {this.props.initialFriends &&\n                                this.props.initialFriends.map((friend, index) => {\n                                // get the name of the friend based off of the users\n                                    console.log(this.props.users)\n                                    var i = 0;\n                                    let name = null;\n                                    for(i = 0; i < this.props.users.length; i++){\n                                        if(this.props.users[i].uid === friend){\n                                            name = this.props.users[i].firstname;\n                                            break;\n                                        }\n                                    }\n                                    console.log(name)\n                                    return (\n                                        <Person\n                                            key={friend}\n                                            name={name}\n                                            uid={friend}\n                                            isLoggedIn = {this.props.isLoggedIn}\n                                        >\n                                        </Person>\n                                    );\n                            })}\n                    </div>\n                </ListGroup>\n            </Container>\n            </>\n        );\n    }\n}\n\nconst addFriendsListToProps = (state) => {\n    console.log(state)\n    return {\n        initialFriends: state.firebase.profile.friends,\n        auth: state.firebase.auth,\n        users: state.firestore.ordered.users\n    };\n};\n\nconst addDispatchtoProps = (dispatch) => {\n  return {\n    addFriend: (friend) => dispatch(addFriend(friend)),\n    isLoggedIn: (uid) => dispatch(isLoggedIn(uid))\n  };\n};\n\nexport default compose(\n    firestoreConnect(() => [\"users\"]),\n    connect(addFriendsListToProps, addDispatchtoProps)\n)(FriendsBar);\n\n// export default connect(addFriendsListToProps,addDispatchtoProps)(FriendsBar)"]},"metadata":{},"sourceType":"module"}